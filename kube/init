docker ps -a &&
export KUBECONFIG=/etc/kubernetes/admin.conf &&
swapoff -a &&
systemctl daemon-reload &&
systemctl restart kubelet &&
kubeadm init --pod-network-cidr=192.168.0.0/16 --skip-preflight-checks &&
kubectl get pods --all-namespaces &&
kubectl taint nodes --all node-role.kubernetes.io/master-

kubectl apply -f calico.yaml
kubectl get pods --all-namespaces

#kubectl apply -f dashboard.yml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
kubectl get pods --all-namespaces

kubectl create -f serv-acc.yaml
kubectl create -f cl-role-bind.yaml
kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')

kubectl apply --namespace kube-system -f "https://cloud.weave.works/k8s/scope.yaml?k8s-version=$(kubectl version | base64 | tr -d '\n')"
kubectl port-forward -n kube-system "$(kubectl get -n kube-system pod --selector=weave-scope-component=app -o jsonpath='{.items..metadata.name}')" 4040

#https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-on-debian-8
#https://medium.com/@gokulc/setting-up-nginx-ingress-on-kubernetes-2b733d8d2f45

tee 1 <<EOF
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
  labels:
    k8s-app: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kube-system
EOF

http://localhost:8001/api/v1/proxy/namespaces/kube-system/services/kubernetes-dashboard/

kubectl label node debian beta.kubernetes.io/fluentd-ds-ready=true
kubectl describe ds fluentd-es-v2.0.2 --namespace=kube-system
http://127.0.0.1:8001/api/v1/proxy/namespaces/kube-system/services/kibana-logging/app/kibana#/management/kibana/index?_g=()
@timestamp